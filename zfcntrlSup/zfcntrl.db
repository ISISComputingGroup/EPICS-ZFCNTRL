record(bo, "$(P)DISABLE")
{
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=0)")
  field(OMSL, "supervisory")
  field(ZNAM, "COMMS ENABLED")
  field(ONAM, "COMMS DISABLED")
  
  info(archive, "5.0 VAL")
}

# Enable *very* verbose logging in the state machine.
#
# This is only intended to be turned on briefly to investigate issues,
# not left on permanently as it would fill up the instrument hard drives
# with it's log output. This is why being in debug mode is considered a 
# MINOR alarm.
record(bo, "$(P)DEBUG")
{
  field(DESC, "Debug mode")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Debug disabled")
  field(ONAM, "Debug enabled")  
  field(OSV, "MINOR")
  
  info(archive, "5.0 VAL")
}

# Tell the magnetometer to process it's PVs and get new values from hardware. This PV is processed
# from the state machine in this IOC.
record(bo, "$(P)TRIGGER_MAGNETOMETER_READ") {
  field(FLNK, "$(MAGNETOMETER):TAKEDATA.PROC CA")
}

# This record is processed from the magnetometer IOC when new readings are available
record(bo, "$(P)INPUTS_UPDATED") {
  field(FLNK, "$(P)FIELD:X:_RAW")
}

record(bi, "$(P)MAGNETOMETER:OVERLOAD") {
  field(INP, "$(MAGNETOMETER):OVERLOAD CA MSS")
  field(ZNAM, "In range")
  field(ONAM, "Out of range")
  field(OSV, "MAJOR")
  
  field(FLNK, "$(P)_UPDATE_READINGS_READY")
}

record(calcout, "$(P)_UPDATE_READINGS_READY") {
  field(A, "1")
  field(CALC, "A")
  field(OUT, "$(P)_READINGS_READY PP")
}

# 1 if new readings are available from the magnetometer but have not yet been consumed
# by the state machine.
record(bo, "$(P)_READINGS_READY") {
  field(VAL, "0")
}

record(mbbo, "$(P)STATEMACHINE:STATE") {
  field(DESC, "What the IOC is doing")
  
  field(ZRST, "initializing")
  field(ONST, "trigger_mag_read")
  field(TWST, "wait_for_mag_read")
  field(THST, "check_corrected_field")
  field(FRST, "check_raw_field")
  field(FVST, "check_auto_feedback")
  field(SXST, "check_output_psu_state")
  field(SVST, "write_to_psu")
  field(EIST, "check_psu_writes")
  field(NIST, "wait_before_read")
  field(TEST, "ensure_mode_current")
  field(ELST, "wait_for_mode_current")
  field(TVST, "ensure_outputs_on")
  field(TTST, "wait_for_outputs_on")
  field(FTST, "ensure_voltage_limits")
  field(FFST, "wait_for_voltage_limits")
    
  # Do not archive unless needed for debugging - this PV can change very quickly (~100Hz)
  # info(archive, "5.0 VAL")
}

record(bi, "$(P)STATEMACHINE:ACTIVITY") {
  field(DESC, "Blinking if IOC is active")
}

record(ao, "$(P)STATEMACHINE:LOOP_TIME") {
  field(DESC, "Time between magnetometer triggers")
  field(EGU, "ms")
  field(PREC, "0")
  
  field(HIHI, "1000")
  field(LOLO, "1")
  field(HHSV, "MINOR")
  field(LLSV, "MINOR")
  
  # Only log if changes by more than 5ms, otherwise database could fill with small fluctuations.
  field(ADEL, "5")
  info(archive, "5.0 VAL")
  info(alarm, "ZFCNTRL")
  info(interest, "LOW")
}

record(ao, "$(P)STATEMACHINE:READ_TIME") {
  field(DESC, "Time for magnetometer read")
  field(EGU, "ms")
  field(PREC, "1")
  
  field(HIHI, "100")
  field(LOLO, "0")
  field(HHSV, "MINOR")
  field(LLSV, "MINOR")
  
  # Only log if changes by more than 10ms, otherwise database could fill with small fluctuations.
  field(ADEL, "10")
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

record(ao, "$(P)STATEMACHINE:WRITE_TIME") {
  field(DESC, "Time for PSU write")
  field(EGU, "ms")
  field(PREC, "1")
  
  field(HIHI, "100")
  field(LOLO, "0")
  field(HHSV, "MINOR")
  field(LLSV, "MINOR")
  
  # Only log if changes by more than 10ms, otherwise database could fill with small fluctuations.
  field(ADEL, "10")
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

record(ao, "$(P)STATEMACHINE:CHECK_TIME") {
  field(DESC, "Time to check PSU write")
  field(EGU, "ms")
  field(PREC, "1")
  
  field(HIHI, "100")
  field(LOLO, "0")
  field(HHSV, "MINOR")
  field(LLSV, "MINOR")
  
  # Only log if changes by more than 10ms, otherwise database could fill with small fluctuations.
  field(ADEL, "10")
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

# Sleep after each statemachine loop. Making this too small will mean the 
# power supplies and/or magnetometer cannot keep up with the command rate
#
# Scientists expect something around 2-10Hz. i.e. 100-500 msec
record(ao, "$(P)STATEMACHINE:LOOP_DELAY")
{
  field(DESC, "Wait between statemachine loops")
  field(EGU, "ms")
  field(VAL, "250")
  field(PINI, "YES")
  field(PREC, "0")
  
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

# Timeout in seconds to get readbacks from external IOCs
# 
# Used for:
#  - acquiring magnetometer readings
#  - checking new current setpoint has been accepted by PSU
#  - checking on/off command has been accepted by PSU
#  - checking current/voltage mode changes have been accepted by PSU
record(ao, "$(P)STATEMACHINE:READ_TIMEOUT")
{
  field(EGU, "s")
  field(VAL, "2")
  field(PINI, "YES")
  field(PREC, "0")
  
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

record(mbbi, "$(P)AT_SETPOINT") {
  field(DESC, "Is measurement within tolerance of SP")
  field(ZRST, "No")
  field(ZRSV, "MAJOR")
  field(ONST, "Yes")
  # N/A is set when autofeedback is off
  field(TWST, "N/A")
  
  info(interest, "HIGH")
  info(archive, "5.0 VAL")
  info(alarm, "ZFCNTRL")
}

record(bo, "$(P)AUTOFEEDBACK") {
  field(DESC, "Mode of ZF system")
  field(ZNAM, "Manual")
  field(ONAM, "Auto-feedback")
  
  # There is a requirement to force manual mode on IOC start.
  $(IFNOTSAVEFEEDBACKMODE) field(VAL, "0")
  field(PINI, "YES")
  # We have put this in pass0 so it's restored quickly.
  $(IFSAVEFEEDBACKMODE) info(autosaveFields_pass0, "VAL")
  
  info(interest, "HIGH")
  info(archive, "5.0 VAL")
}

alias("$(P)AUTOFEEDBACK", "$(P)AUTOFEEDBACK:SP")

record(ao, "$(P)TOLERANCE") {
  field(DESC, "Tolerance for 'AT_SETPOINT' field")
  field(EGU, "mG")
  field(PREC, "3")
  
  info(interest, "HIGH")
  info(archive, "5.0 VAL")
}

record(ao, "$(P)VOLT_LIMIT_TOLERANCE") {
  field(DESC, "Tolerance for voltage limit")
  field(EGU, "V")
  field(PREC, "3")
  field(VAL, "0.1")
  field(PINI, "YES")
  
  info(archive, "5.0 VAL")
}

# Any changes to this PV will also need reflecting in the sequencer .st file.
record(mbbo, "$(P)STATUS") {
  field(DESC, "Status of ZF system")
  
  field(ZRST, "No error")
  field(ZRSV, "NO_ALARM")
  
  field(ONST, "No new magnetometer data")
  field(ONSV, "INVALID")
  
  # Duplicated state, in auto mode there is a MAJOR alarm on this state.
  field(TWST, "Magnetometer overloaded")
  field(TWSV, "MAJOR")
  
  # Duplicated state, in manual mode there is no alarm on this state.
  field(THST, "Magnetometer overloaded")
  field(THSV, "NO_ALARM")
  
  field(FRST, "Magnetometer data invalid")
  field(FRSV, "INVALID")
  
  field(FVST, "Power supply invalid")
  field(FVSV, "INVALID")
  
  field(SXST, "Power supply on limits")
  field(SXSV, "MAJOR")
  
  field(SVST, "Power supply write failed")
  field(SVSV, "INVALID")
  
  field(EIST, "PSU high limit<low limit")
  field(EISV, "MAJOR")
  
  field(NIST, "PSU sp_rbv out of range")
  field(NISV, "MAJOR")
  
  info(interest, "HIGH")
  info(archive, "VAL SEVR")
  info(alarm, "ZFCNTRL")
}

record(ao, "$(P)P:FEEDBACK") {
  field(DESC, "Proportional feedback factor")
  field(EGU, "")  # unitless
  field(PREC, "6")
  field(VAL, "$(FEEDBACK)")
  field(PINI, "YES")
  
  info(interest, "HIGH")
  info(archive, "5.0 VAL")
}

alias("$(P)P:FEEDBACK", "$(P)P:FEEDBACK:SP")


# Allowable difference between PSU setpoint and readback before write is considered to have failed
# for a kepco bop 36-6M this is 2mA in low current range and 1.2mA in high current range
# hence use 0.0012 
record(ao, "$(P)OUTPUT:PSU_WRITE_TOLERANCE") {
  field(DESC, "Output power supply write tolerance")
  field(EGU, "A")
  field(VAL, "0.0012")
  field(PINI, "YES")
  field(PREC, 4)
  
  info(archive, "5.0 VAL")
  info(interest, "LOW")
}

record(calc, "$(P)FIELD:MAGNITUDE") {
  field(DESC, "Magnitude of corrected field")
  field(INPA, "$(P)FIELD:X CP MS")
  field(INPB, "$(P)FIELD:Y CP MS")
  field(INPC, "$(P)FIELD:Z CP MS")
  field(CALC, "SQRT(A*A + B*B + C*C)")
  field(EGU, "mG")
  field(PREC, "2")
  info(archive, "5.0 VAL")
  info(alarm, "ZFCNTRL")
  info(interest, "HIGH")
  field(ASG, "READONLY")
}

record(calc, "$(P)FIELD:MAGNITUDE:MEAS") {
  field(DESC, "Magnitude of uncorrected field")
  field(INPA, "$(P)FIELD:X:MEAS CP MS")
  field(INPB, "$(P)FIELD:Y:MEAS CP MS")
  field(INPC, "$(P)FIELD:Z:MEAS CP MS")
  field(CALC, "SQRT(A*A + B*B + C*C)")
  field(EGU, "mG")
  field(PREC, "2")
  info(archive, "5.0 VAL")
  info(alarm, "ZFCNTRL")
  info(interest, "HIGH")
  field(ASG, "READONLY")
}
